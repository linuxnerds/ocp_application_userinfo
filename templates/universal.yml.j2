---
- name: "Getting {{ _info.kind }} for {{ _info.name }} {{ on {{ _login.cluster.name |d('Cluster')}}"
  ignore_errors: true
  k8s_info:
{% if _info.api_version is defined %}
    api_version: "{{ _info.api_version }}"
{% elif _info.kind == 'ManagedCluster' %}
    api_version: cluster.open-cluster-management.io/v1
{% elif _info.kind == 'NooBaa' %}
    api_version: noobaa.io/v1alpha1
{% elif _info.kind == 'Pipeline' or _info.kind == 'PipelineRun' %}
    api_version: tekton.dev/v1beta1
{% elif _info.kind == 'InstallPlan' %}
    api_version: operators.coreos.com/v1alpha1
{% elif _info.kind == 'Kafka' or _info.kind == 'KafkaTopic' %}
    api_version: kafka.strimzi.io/v1beta2
{% elif _info.kind == 'ArgoCD' %}
    api_version: argoproj.io/v1alpha1
{% endif %}
    {% raw %}
    host: "{{ _r_auth_cluster.k8s_auth.host | default(omit) }}"
    username: "{{ _r_auth_cluster.k8s_auth.username | default(omit) }}"
    api_key: "{{ _r_auth_cluster.k8s_auth.api_key | default(omit) }}"
    {% endraw -%}
    validate_certs: false
    kind: "{{ _info.kind }}"
    name: "{{ _info.name | default(omit) }}"
    namespace: "{{ _info.namespace | default(omit) }}"
  register: _r_uinfo_universal

- name: generate user_info
  agnosticd_user_info:
    data:
{% for idata in  _info.data %}
      - {{ idata }}
{% endfor %}